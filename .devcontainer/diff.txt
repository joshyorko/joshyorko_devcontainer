diff --git a/.devcontainer/Dockerfile b/.devcontainer/Dockerfile
index 08d59dd..e422065 100644
--- a/.devcontainer/Dockerfile
+++ b/.devcontainer/Dockerfile
@@ -1,7 +1,10 @@
 # .devcontainer/Dockerfile
 FROM mcr.microsoft.com/devcontainers/universal:focal
 
-# Install essential packages and AWS CLI
+# Copy the first-run-notice.txt file
+COPY first-run-notice.txt /tmp/scripts/
+
+# Install essential packages, AWS CLI, and PostgreSQL client
 RUN sudo apt-get update && \
     sudo apt-get upgrade -y && \
     sudo apt-get install -y --no-install-recommends \
@@ -9,28 +12,16 @@ RUN sudo apt-get update && \
         git \
         curl \
         vim \
-        sudo && \
-    # Clean up to reduce image size
+        sudo \
+        postgresql-client && \
     sudo apt-get clean && \
     rm -rf /var/lib/apt/lists/*
 
 # Create the 'vscode' user with sudo privileges
 RUN sudo adduser --disabled-password --gecos '' vscode && \
     sudo usermod -aG sudo vscode && \
-    echo '%sudo ALL=(ALL) NOPASSWD:ALL' | sudo tee -a /etc/sudoers
-
-# Switch to 'vscode' user
-USER vscode
-
-# Set the home directory
-ENV HOME=/home/vscode
-
-# Set the default shell to bash
-ENV SHELL=/bin/bash
-
-# Optional: Install additional tools or dependencies here
-# Example:
-# RUN sudo apt-get update && sudo apt-get install -y <package-name>
+    echo '%sudo ALL=(ALL) NOPASSWD:ALL' | sudo tee -a /etc/sudoers && \
+    sudo chown -R vscode:vscode /home/vscode
 
 # Keep the container running
 CMD ["sleep", "infinity"]
diff --git a/.devcontainer/docker-compose.yml b/.devcontainer/docker-compose.yml
index 6f40387..a9fcece 100644
--- a/.devcontainer/docker-compose.yml
+++ b/.devcontainer/docker-compose.yml
@@ -1,24 +1,63 @@
 name: devcontainer-test
+x-common-networks: &common-networks
+  networks:
+    - devcontainer-network
+
 services:
   devcontainer:
     build: 
       context: .
       dockerfile: Dockerfile
-    image: devcontainer-test
+    image: ghcr.io/joshyorko/joshyorko_devcontainer:latest
     volumes:
       - ../..:/workspaces:cached      
-    network_mode: service:db
+    <<: *common-networks
     command: sleep infinity
 
   db:
-    image: postgres:latest
+    image: bitnami/postgresql:latest
     restart: unless-stopped
     volumes:
-      - postgres-data:/var/lib/postgresql/data
+      - postgres-data:/bitnami/postgresql
     environment:
       POSTGRES_PASSWORD: postgres
       POSTGRES_USER: postgres
       POSTGRES_DB: postgres
+    <<: *common-networks
+
+  minio:
+    image: minio/minio:latest
+    restart: unless-stopped
+    ports:
+      - "9000:9000"
+      - "9001:9001"
+    volumes:
+      - minio-data:/data
+    environment:
+      MINIO_ACCESS_KEY: minio
+      MINIO_SECRET_KEY: Pa22word22
+    command: ["server", "--console-address", ":9001", "/data"]
+    <<: *common-networks
+
+  mino-setup:
+    image: minio/mc:latest
+    depends_on:
+      - minio
+    environment:
+      MINIO_ACCESS_KEY: minio
+      MINIO_SECRET_KEY: Pa22word22
+    entrypoint: >
+      /bin/sh -c "
+      echo 'Waiting for Minio to start...' &&
+      /bin/sleep
+      mc alias set minio http://minio:9000 $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY &&
+      mc mb minio/my-content-engine &&
+      echo 'Minio setup complete'"
+    <<: *common-networks
 
 volumes:
-  postgres-data:
\ No newline at end of file
+  postgres-data:
+  minio-data:
+
+networks:
+  devcontainer-network:
\ No newline at end of file
